apply plugin: 'com.android.application'
apply plugin: 'newrelic'

repositories {
    mavenCentral()
    maven {
        url "http://maven.geo-solutions.it/"
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "it.geosolutions.android.siigmobile"
        minSdkVersion 11
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions{
        exclude 'COPYING'
        exclude 'COPYING.LESSER'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
}
}

task copyNativeLibs(type: Copy) {
    from(new File(project(':geopaparazzispatialitelibrary').projectDir, 'libs')) {
        include 'armeabi/libjsqlite.so'
        include 'armeabi-v7a/libjsqlite.so'
        include 'x86/libjsqlite.so'
    }
    into new File(buildDir, 'native-libs')
}
tasks.withType(JavaCompile) { compileTask -> compileTask.dependsOn copyNativeLibs }
clean.dependsOn 'cleanCopyNativeLibs'

tasks.withType(com.android.build.gradle.tasks.PackageApplication) { pkgTask ->
    //pkgTask.jniDir new File(buildDir, 'native-libs')
    pkgTask.jniFolders = new HashSet<File>()
    pkgTask.jniFolders.add(new File(buildDir, 'native-libs'))
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:design:22.2.0'
    compile project(':map')

    //Retrofit
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.4.0'
    compile 'com.squareup.okhttp:okhttp:2.4.0'

    compile 'com.newrelic.agent.android:android-agent:5.+'

    androidTestCompile 'xmlunit:xmlunit:1.6'

}
